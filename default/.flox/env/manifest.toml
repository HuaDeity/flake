## Flox Environment Manifest -----------------------------------------
##
##   _Everything_ you need to know about the _manifest_ is here:
##
##   https://flox.dev/docs/reference/command-reference/manifest.toml/
##
## -------------------------------------------------------------------
# Flox manifest version managed by Flox CLI
version = 1


## Install Packages --------------------------------------------------
##  $ flox install gum  <- puts a package in [install] section below
##  $ flox search gum   <- search for a package
##  $ flox show gum     <- show all versions of a package
## -------------------------------------------------------------------
[install]
bash.pkg-path = "bash"
bat.pkg-path = "bat"
bat-extras.pkg-path = "bat-extras.core"
biome.pkg-path = "biome"
chafa.pkg-path = "chafa"
chezmoi.pkg-path = "chezmoi"
claude-code.pkg-path = "claude-code"
codex.pkg-path = "codex"
direnv.pkg-path = "direnv"
doppler.pkg-path = "doppler"
eza.pkg-path = "eza"
fd.pkg-path = "fd"
fish.pkg-path = "fish"
fzf.pkg-path = "fzf"
gemini-cli.pkg-path = "gemini-cli"
gh.pkg-path = "gh"
git.pkg-path = "git"
delta.pkg-path = "delta"
git-lfs.pkg-path = "git-lfs"
glow.pkg-path = "glow"
hexyl.pkg-path = "hexyl"
home-manager.pkg-path = "home-manager"
home-manager.systems = [
	"aarch64-darwin",
	"aarch64-linux",
	"x86_64-darwin",
	"x86_64-linux",
]
imagemagick.pkg-path = "imagemagick"
jujutsu.pkg-path = "jujutsu"
lazygit.pkg-path = "lazygit"
ollama.pkg-path = "ollama"
mcp-hub.flake = "github:ravitemer/mcp-hub"
mcp-hub.systems = [
	"aarch64-darwin",
	"aarch64-linux",
	"x86_64-darwin",
	"x86_64-linux",
]
mihomo.pkg-path = "mihomo"
mihomo.systems = ["aarch64-linux", "x86_64-linux"]
neovim-nightly-overlay.flake = "github:nix-community/neovim-nightly-overlay"
nix-auth.flake = "github:numtide/nix-auth"
nix-auth.systems = [
	"aarch64-darwin",
	"aarch64-linux",
	"x86_64-darwin",
	"x86_64-linux",
]
nix-gl-host.flake = "github:numtide/nix-gl-host"
nix-gl-host.systems = ["aarch64-linux", "x86_64-linux"]
nixd.pkg-path = "nixd"
nixd.systems = [
	"aarch64-darwin",
	"aarch64-linux",
	"x86_64-darwin",
	"x86_64-linux",
]
nixfmt-rfc-style.pkg-path = "nixfmt-rfc-style"
nixfmt-rfc-style.systems = [
	"aarch64-darwin",
	"aarch64-linux",
	"x86_64-darwin",
	"x86_64-linux",
]
nodejs.pkg-path = "nodejs"
nvitop.pkg-path = "nvitop"
nvitop.systems = ["aarch64-linux", "x86_64-linux"]
ripgrep.pkg-path = "ripgrep"
sqlite.pkg-path = "sqlite"
taplo.pkg-path = "taplo"
tmux.pkg-path = "tmux"
tree-sitter.pkg-path = "tree-sitter"
vectorcode.pkg-path = "vectorcode"
vectorcode.systems = ["aarch64-darwin", "x86_64-darwin", "x86_64-linux"]
vivid.pkg-path = "vivid"
wakatime-cli.pkg-path = "wakatime-cli"
yazi.pkg-path = "yazi"
zoxide.pkg-path = "zoxide"
# gum.pkg-path = "gum"
# gum.version = "^0.14.5"


## Environment Variables ---------------------------------------------
##  ... available for use in the activated environment
##      as well as [hook], [profile] scripts and [services] below.
## -------------------------------------------------------------------
[vars]
# INTRO_MESSAGE = "It's gettin' Flox in here"


## Activation Hook ---------------------------------------------------
##  ... run by _bash_ shell when you run 'flox activate'.
## -------------------------------------------------------------------
[hook]
# on-activate = '''
#   # -> Set variables, create files and directories
#   # -> Perform initialization steps, e.g. create a python venv
#   # -> Useful environment variables:
#   #      - FLOX_ENV_PROJECT=/home/user/example
#   #      - FLOX_ENV=/home/user/example/.flox/run
#   #      - FLOX_ENV_CACHE=/home/user/example/.flox/cache
# '''


## Profile script ----------------------------------------------------
## ... sourced by _your shell_ when you run 'flox activate'.
## -------------------------------------------------------------------
[profile]
# common = '''
#   gum style \
#   --foreground 212 --border-foreground 212 --border double \
#   --align center --width 50 --margin "1 2" --padding "2 4" \
#     $INTRO_MESSAGE
# '''
## Shell-specific customizations such as setting aliases go here:
# bash = ...
# zsh  = ...
# fish = ...


## Services ---------------------------------------------------------
##  $ flox services start             <- Starts all services
##  $ flox services status            <- Status of running services
##  $ flox activate --start-services  <- Activates & starts all
## ------------------------------------------------------------------
[services]
# myservice.command = "python3 -m http.server"


## Include ----------------------------------------------------------
## ... environments to create a composed environment
## ------------------------------------------------------------------
[include]
# environments = [
#     { dir = "../common" }
# ]


## Build and publish your own packages ------------------------------
##  $ flox build
##  $ flox publish
## ------------------------------------------------------------------
[build]
# [build.myproject]
# description = "The coolest project ever"
# version = "0.0.1"
# command = """
#   mkdir -p $out/bin
#   cargo build --release
#   cp target/release/myproject $out/bin/myproject
# """


## Other Environment Options -----------------------------------------
[options]
# Systems that environment is compatible with
# systems = [
#   "aarch64-darwin",
#   "aarch64-linux",
#   "x86_64-darwin",
#   "x86_64-linux",
# ]
# Uncomment to disable CUDA detection.
# cuda-detection = false

[options.activate]
mode = "run"
